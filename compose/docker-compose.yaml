# version: '3'

services:
  # The backend server application
  server:
    image: eyalpross101/server
    # -------------------------------------------
    # The build the image locally uncomment below
    build:
      context: ../backend/server
      dockerfile: Dockerfile
    # -------------------------------------------
    container_name: server
    restart: always
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/?replicaSet=rs0
      - JWT_KEY=${JWT_KEY}
    depends_on:
      - mongo
    networks:
      - app-network

  # Mongo DB
  mongo:
    image: mongo
    container_name: server-mongo
    command: mongod --replSet rs0 --bind_ip_all
    restart: always
    # -------------------------------------------
    # # Enable external communication
    # ports:
    #   - "27017:27017"
    # -------------------------------------------
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      # Init a replicaset so that the server can perform transactions
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

# Setup an internal network to the backend application
networks:
  app-network:
    driver: bridge

# Setup a local volume to persist mongodb data
volumes:
  mongo-data:
    driver: local